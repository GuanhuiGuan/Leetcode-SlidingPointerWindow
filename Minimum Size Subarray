class Solution:
    """
    @param: nums: an array of integers
    @param: s: An integer
    @return: an integer representing the minimum size of subarray
    """
    def minimumSize(self, nums, s):
        # write your code here
        if sum(nums) < s:
            return -1;
            
        i = 0;
        
        minl = len(nums);
        
        for j in range(len(nums)): #2 pointers to search the array, the first to explore while second to optimize
            while i <= j:
                if sum(nums[i:j+1]) >= s:
                    minl = min(minl, j - i + 1);
                    i += 1;
                else:
                    break;
        print(minl);
        return minl;
            
            

            
